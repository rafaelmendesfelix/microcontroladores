Data: 03/05/2017

1. Escreva uma função em C que faz o debounce de botões ligados à porta P1.

#pragma vector = PORT1_VECTOR
__interrupt void Interrupcao_P1(void)
{
    P1OUT ^= LEDS;
    atraso(100000);
    P1IFG &= ~BTN;
}

2. Escreva um código em C que lê 9 botões multiplexados por 6 pinos, e pisca os LEDs da placa Launchpad de acordo com os botões. 
Por exemplo, se o primeiro botão é pressionado, os LEDs piscam uma vez; se o segundo botão é pressionado, os LEDs piscam duas vezes; 
e assim por diante. Se mais de um botão é pressionado, os LEDs não piscam.

  #include "io430.h"

#define Linha_1 BIT4
#define Linha_2 BIT5
#define Linha_3 BIT6
#define Coluna_1 BIT1
#define Coluna_2 BIT2
#define Coluna_3 BIT3
void atraso(volatile unsigned int dealy)
{
    while((delay--)>0);
}

void Pisca (int i){
    while(i>0){
    P1OUT ^= BIT0;
    atraso(100000);
    i--;
    }
}

int main( void )
{
  // Stop watchdog timer to prevent time out reset
  WDTCTL = WDTPW + WDTHOLD;
  P1OUT = 0x00;
  P1DIR = 0xFF;
  P1DIR  &= ~(BIT4+BIT5+BIT6);
  P1REN |= (BIT4+BIT5+BIT6);
  P1OUT |= (BIT4+BIT5+BIT6);
  
  while(1){
     P1OUT |= Coluna_1 + Coluna_2 + Coluna_3;
     P1OUT &= ~Coluna_1
     if((P1IN&Linha_1)==0)
       pisca(1);
     if((P1IN&Linha_2)==0)
       pisca(4);
     if((P1IN&Linha_3)==0)
       pisca(7);
     
     P1OUT |= Coluna_1;
     P1OUT &= ~Coluna_2;
     if((P1IN&Linha_1)==0)
       pisca(2);
     if((P1IN&Linha_2)==0)
       pisca(5);
     if((P1IN&Linha_3)==0)
       pisca(8);
     
     P1OUT |= Coluna_2;
     P1OUT &= ~Coluna_3;
     if((P1IN&Linha_1)==0)
       pisca(3);
     if((P1IN&Linha_2)==0)
       pisca(6);
     if((P1IN&Linha_3)==0)
       pisca(9);
  }
  return 0;
}

